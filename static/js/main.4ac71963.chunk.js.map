{"version":3,"sources":["components/Button/Button.constants.ts","components/Button/Button.tsx","components/Button/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ButtonTypes","Button","text","onClick","type","role","App","className","Submit","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yIAAYA,E,4DAAAA,K,gBAAAA,E,cAAAA,E,iBAAAA,M,KCSZ,ICJeC,EDIiB,SAAC,GAI1B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QAEI,IADJC,YACI,MADGJ,EAAYC,OACf,EACJ,OACE,wBAAQG,KAAMA,EAAMD,QAASA,EAASE,KAAK,SAA3C,SACGH,KEHQI,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACC,cAAC,EAAD,CAAQH,KAAMJ,EAAYQ,OAAQN,KAAK,WAAWC,QAAS,WAAOM,QAAQC,IAAI,wBCMpEC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4ac71963.chunk.js","sourcesContent":["export enum ButtonTypes {\n  Button = \"button\",\n  Reset = \"reset\",\n  Submit = \"submit\",\n};\n\n// export type ButtonTypes = \"button\" | \"reset\" | \"submit\";","import React, { FC } from 'react';\nimport { ButtonTypes } from './Button.constants';\n\ninterface ButtonProps {\n  text: string;\n  type?: ButtonTypes;\n  onClick?: () => void;\n}\n\nconst Button: FC<ButtonProps> = ({\n  text,\n  onClick,\n  type = ButtonTypes.Button,\n}) => {\n  return (\n    <button type={type} onClick={onClick} role=\"button\">\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import Button from './Button';\n\nexport * from './Button.constants';\n\n\nexport default Button;","import React from 'react'; \nimport './App.css';\n\nimport Button, { ButtonTypes } from './components/Button'; \n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Button type={ButtonTypes.Submit} text=\"Click me\" onClick={() => {console.log('button clicked')}}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}